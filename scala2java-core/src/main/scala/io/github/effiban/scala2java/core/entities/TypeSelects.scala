package io.github.effiban.scala2java.core.entities

import scala.meta.XtensionQuasiquoteType

object TypeSelects {

  // Please maintain alphabetical order in each section

  final val JavaAbstractMethodError = t"java.lang.AbstractMethodError"
  final val JavaArrayIndexOutOfBoundsException = t"java.lang.ArrayIndexOutOfBoundsException"
  final val JavaBiConsumer = t"java.util.function.BiConsumer"
  final val JavaBiFunction = t"java.util.function.BiFunction"
  final val JavaBigDecimal = t"java.math.BigDecimal"
  final val JavaBigInt = t"java.math.BigInt"
  final val JavaClass = t"java.lang.Class"
  final val JavaClassCastException = t"java.lang.ClassCastException"
  final val JavaCloneable = t"java.lang.Cloneable"
  final val JavaCompletableFuture = t"java.util.concurrent.CompletableFuture"
  final val JavaConsumer = t"java.util.function.Consumer"
  final val JavaEither = t"io.vavr.control.Either"
  final val JavaError = t"java.lang.Error"
  final val JavaException = t"java.lang.Exception"
  final val JavaFunction = t"java.util.function.Function"
  final val JavaIllegalArgumentException = t"java.lang.IllegalArgumentException"
  final val JavaIndexOutOfBoundsException = t"java.lang.IndexOutOfBoundsException"
  final val JavaInterruptedException = t"java.lang.InterruptedException"
  final val JavaInteger = t"java.lang.Integer"
  final val JavaIterable = t"java.lang.Iterable"
  final val JavaIterator = t"java.lang.Iterator"
  final val JavaList = t"java.util.List"
  final val JavaMap = t"java.util.Map"
  final val JavaNoSuchElementException = t"java.util.NoSuchElementException"
  final val JavaNullPointerException = t"java.lang.NullPointerException"
  final val JavaNumberFormatException = t"java.lang.NumberFormatException"
  final val JavaObject = t"java.lang.Object"
  final val JavaOptional = t"java.util.Optional"
  final val JavaRunnable = t"java.lang.Runnable"
  final val JavaRuntimeException = t"java.lang.RuntimeException"
  final val JavaSet = t"java.util.Set"
  final var JavaSerializable = t"java.io.Serializable"
  final val JavaStream = t"java.util.stream.Stream"
  final val JavaString = t"java.lang.String"
  final val JavaStringBuilder = t"java.lang.StringBuilder"
  final val JavaStringIndexOutOfBoundsException = t"java.lang.StringIndexOutOfBoundsException"
  final val JavaSupplier = t"java.util.function.Supplier"
  final val JavaThrowable = t"java.lang.Throwable"
  final val JavaTry = t"io.vavr.control.Try"
  final val JavaUnsupportedOperationException = t"java.lang.UnsupportedOperationException"

  final val ScalaAbstractMethodError = t"scala.AbstractMethodError"
  final val ScalaAny = t"scala.Any"
  final val ScalaAnyRef = t"scala.AnyRef"
  final val ScalaAnyVal = t"scala.AnyVal"
  final val ScalaArray = t"scala.Array"
  final val ScalaArrayIndexOutOfBoundsException = t"scala.ArrayIndexOutOfBoundsException"
  final val ScalaArraySeq = t"scala.collection.immutable.ArraySeq"
  final val ScalaBigDecimal = t"scala.BigDecimal"
  final val ScalaBigInt = t"scala.BigInt"
  final val ScalaBoolean = t"scala.Boolean"
  final val ScalaByte = t"scala.Byte"
  final val ScalaChar = t"scala.Char"
  final val ScalaClass = t"scala.Predef.Class"
  final val ScalaClassCastException = t"scala.ClassCastException"
  final val ScalaCloneable = t"scala.Cloneable"
  final val ScalaDouble = t"scala.Double"
  final val ScalaEither = t"scala.Either"
  final val ScalaEquiv = t"scala.Equiv"
  final val ScalaEnumeration = t"scala.Enumeration"
  final val ScalaError = t"scala.Error"
  final val ScalaException = t"scala.Exception"
  final val ScalaFailure = t"scala.util.Failure"
  final val ScalaFloat = t"scala.Float"
  final val ScalaFunction = t"scala.Predef.Function"
  final val ScalaFractional = t"scala.Fractional"
  final val ScalaFuture = t"scala.concurrent.Future"
  final val ScalaHashMap = t"scala.collection.immutable.HashMap"
  final val ScalaHashSet = t"scala.collection.immutable.HashSet"
  final val ScalaIllegalArgumentException = t"scala.IllegalArgumentException"
  final val ScalaIndexedSeq = t"scala.IndexedSeq"
  final val ScalaIndexOutOfBoundsException = t"scala.IndexOutOfBoundsException"
  final val ScalaInt = t"scala.Int"
  final val ScalaIntegral = t"scala.Integral"
  final val ScalaIterable = t"scala.Iterable"
  final val ScalaIterator = t"scala.Iterator"
  final val ScalaInterruptedException = t"scala.InterruptedException"
  final val ScalaLazyList = t"scala.LazyList"
  final val ScalaLinearSeq = t"scala.collection.immutable.LinearSeq"
  final val ScalaListMap = t"scala.collection.immutable.ListMap"
  final val ScalaListSet = t"scala.collection.immutable.ListSet"
  final val ScalaLeft = t"scala.Left"
  final val ScalaList = t"scala.List"
  final val ScalaLong = t"scala.Long"
  final val ScalaMap = t"scala.Predef.Map"
  final val ScalaNoSuchElementException = t"scala.NoSuchElementException"
  final val ScalaNumeric = t"scala.Numeric"
  final val ScalaNullPointerException = t"scala.NullPointerException"
  final val ScalaNumberFormatException = t"scala.NumberFormatException"
  final val ScalaOption = t"scala.Option"
  final val ScalaOrdered = t"scala.Ordered"
  final val ScalaOrdering = t"scala.Ordering"
  final val ScalaPartiallyOrdered = t"scala.PartiallyOrdered"
  final val ScalaPartialOrdering = t"scala.PartialOrdering"
  final var ScalaRange = t"scala.Range"
  final val ScalaRight = t"scala.Right"
  final val ScalaRuntimeException = t"scala.RuntimeException"
  final val ScalaShort = t"scala.Short"
  final val ScalaSeq = t"scala.Seq"
  final val ScalaSet = t"scala.Predef.Set"
  final val ScalaSerializable = t"scala.Serializable"
  final val ScalaSome = t"scala.Some"
  final val ScalaSortedMap = t"scala.collection.immutable.SortedMap"
  final val ScalaSortedSet = t"scala.collection.immutable.SortedSet"
  final val ScalaStream = t"scala.Stream"
  final var ScalaString = t"scala.Predef.String"
  final var ScalaStringBuilder = t"scala.StringBuilder"
  final val ScalaStringIndexOutOfBoundsException = t"scala.StringIndexOutOfBoundsException"
  final val ScalaSuccess = t"scala.util.Success"
  final val ScalaThrowable = t"scala.Throwable"
  final val ScalaTreeMap = t"scala.collection.immutable.TreeMap"
  final val ScalaTreeSet = t"scala.collection.immutable.TreeSet"
  final val ScalaTry = t"scala.util.Try"
  final val ScalaUnit = t"scala.Unit"
  final val ScalaUnsupportedOperationException = t"scala.UnsupportedOperationException"
  final val ScalaVector = t"scala.Vector"
}
